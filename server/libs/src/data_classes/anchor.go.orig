package data_classes

import (
	"fmt"
	//enc "json_helpers"
)

/* ---------------------- Anchor Dictionary..ish ---------------------- */

type Anchor struct {
	refMap map[string]interface{}
}

<<<<<<< HEAD
func (anchor *Anchor) SetMap(m map[string]interface{}){
	anchor.refMap = m;
=======
func (anchor *Anchor) SetMap(m map[string]interface{}) {
	anchor.refMap = m
>>>>>>> 4f39b055af4e353222ee662174c7e182656a3be6
}

func (anchor *Anchor) GetProp(reqField string) interface{} {
	oField, ok := anchor.refMap[reqField]

	if !ok {
		fmt.Println("Anchor refMap err: ", ok, reqField)
		return ""
	}

	return oField
<<<<<<< HEAD
}
=======
	/*
		// TODO: need to abstract the type cast so we can use
		// other type such as int.
		field, ok := oField.(string)

		if ok {
			return field
		} else {
			fmt.Println("Error: Unable to convert %v to a string", reqField)
			return ""
		}
		return field, ok
	*/
}
>>>>>>> 4f39b055af4e353222ee662174c7e182656a3be6
